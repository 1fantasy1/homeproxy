#!/bin/sh /etc/rc.common
# SPDX-License-Identifier: GPL-3.0-only
#
# Copyright (C) 2022 ImmortalWrt.org

USE_PROCD=1

START=99
STOP=10

CONF="homeproxy"
PROG="/usr/bin/sing-box"
TUNNAME="emortal-singbox"

HP_DIR="/etc/homeproxy"
RUN_DIR="/var/run/homeproxy"

FW4="$(command -v fw4)"

log() {
	echo -e "$(date "+%Y-%m-%d %H:%M:%S") [DAEMON] $*" >> "$RUN_DIR/homeproxy.log"
}

start_service() {
	config_load "$CONF"

	local main_server enabled_server
	config_get main_server "config" "main_server" "nil"
	config_get_bool enabled_server "server" "enabled" "0"

	local routing_mode default_outbound
	config_get routing_mode "config" "routing_mode"
	config_get default_outbound "routing" "default_outbound" "nil"

	if [ "$main_server" = "nil" ] && [ "$routing_mode" = "custom" -a "$default_outbound" = "nil" ] && [ "$enabled_server" = "0" ]; then
		return 1
	fi

	mkdir -p "$RUN_DIR"
	"$HP_DIR"/scripts/generate_sing-box.lua

	local inbounds="$(jsonfilter -i "$RUN_DIR/sing-box.json" -e "@.inbounds")"
	if [ ! -e "$RUN_DIR/sing-box.json" ]; then
		log "Error: failed to generate configuration."
		return 1
	elif [ -z "$inbounds" ] || [ "$inbounds" = "[ ]" ]; then
		log "Error: no valid inbound found."
		return 1
	fi

	if ! "$PROG" check --config "$RUN_DIR/sing-box.json" 2>>"$RUN_DIR/homeproxy.log"; then
		log "Error: wrong configuration detected."
	fi

	procd_open_instance "sing-box"
	procd_set_param command "$PROG"
	procd_append_param command run --config "$RUN_DIR/sing-box.json"

	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_set_param respawn

	procd_close_instance

	if [ -z "$FW4" ]; then
		mkdir -p "/var/etc/"
		echo "iptables -I FORWARD -o $TUNNAME -j ACCEPT" > "/var/etc/$CONF.include"
		[ -z "$(command -v ip6tables)" ] || echo "ip6tables -I FORWARD -o $TUNNAME -j ACCEPT" >> "/var/etc/$CONF.include"
		sh "/var/etc/$CONF.include"
	fi

	log "$(sing-box version | awk '{print $1,$2}') started."
}

stop_service() {
	rm -f "$RUN_DIR/sing-box.json" "$RUN_DIR/sing-box.log"
	if [ -z "$FW4" ]; then
		iptables -D FORWARD -o "$TUNNAME" -j ACCEPT
		[ -z "$(command -v ip6tables)" ] || ip6tables -D FORWARD -o "$TUNNAME" -j ACCEPT
		rm -f "/var/etc/$CONF.include"
	fi
}

reload_service() {
	stop
	start
}

service_triggers() {
	procd_add_reload_trigger "$CONF"
}
