#!/bin/sh /etc/rc.common
# SPDX-License-Identifier: GPL-3.0-only
#
# Copyright (C) 2022 ImmortalWrt.org

USE_PROCD=1

START=99
STOP=10

CONF="homeproxy"
PROG="/usr/bin/sing-box"
TUNNAME="emortal-singbox"

HP_DIR="/etc/homeproxy"
RUN_DIR="/var/run/homeproxy"
LOG_PATH="$RUN_DIR/homeproxy.log"

FW4="$(command -v fw4)"

log() {
	echo -e "$(date "+%Y-%m-%d %H:%M:%S") [DAEMON] $*" >> "$LOG_PATH"
}

start_service() {
	stop

	config_load "$CONF"

	local main_server enabled_server
	config_get main_server "config" "main_server" "nil"
	config_get_bool enabled_server "server" "enabled" "0"

	local routing_mode default_outbound
	config_get routing_mode "config" "routing_mode"
	config_get default_outbound "routing" "default_outbound" "nil"

	if [ "$main_server" = "nil" ] && [ "$routing_mode" = "custom" -a "$default_outbound" = "nil" ] && [ "$enabled_server" = "0" ]; then
		return 1
	fi

	mkdir -p "$RUN_DIR"
	"$HP_DIR"/scripts/generate_sing-box.lua

	local inbounds="$(jsonfilter -i "$RUN_DIR/sing-box.json" -e "@.inbounds")"
	if [ ! -e "$RUN_DIR/sing-box.json" ]; then
		log "Error: failed to generate configuration."
		return 1
	elif [ -z "$inbounds" ] || [ "$inbounds" = "[ ]" ]; then
		log "Error: no valid inbound found."
		return 1
	elif ! "$PROG" check --config "$RUN_DIR/sing-box.json" 2>>"$LOG_PATH"; then
		log "Error: wrong configuration detected."
		return 1
	fi

	procd_open_instance "sing-box"
	procd_set_param command "$PROG"
	procd_append_param command run --config "$RUN_DIR/sing-box.json"

	# Auto update
	local auto_update auto_update_time
	config_get_bool auto_update "subscription" "auto_update" "0"
	if [ "auto_update" = "1" ]; then
		config_get auto_update_time "subscription" "auto_update_time" "2"
		echo "0 ${auto_update_time} * * * $HP_DIR/scripts/update_geodata.sh update_version update_subscription" >> "/etc/crontabs/root"
	fi
	# Clean log
	echo -e "*/10 * * * * $HP_DIR/scripts/clean_log.sh" >> "/etc/crontabs/root"
	/etc/init.d/cron restart

	# Hijack DNS
	uci rename "dhcp.@dnsmasq[0].nonwildcard"="_orig_nonwildcard" 2>"/dev/null"
	uci set "dhcp.@dnsmasq[0].nonwildcard"=1
	uci commit "dhcp"

	# Set firewall
	if [ -z "$FW4" ]; then
		mkdir -p "/var/etc/"

		# Allow FORWARD
		echo "iptables -I FORWARD -o $TUNNAME -j ACCEPT" > "/var/etc/$CONF.include"
		[ -z "$(command -v ip6tables)" ] || echo "ip6tables -I FORWARD -o $TUNNAME -j ACCEPT" >> "/var/etc/$CONF.include"

		sh "/var/etc/$CONF.include"
	fi

	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_set_param respawn

	procd_close_instance

	log "$(sing-box version | awk '{print $1,$2}') started."
}

stop_service() {
	sed -i "/$CONF/d" "/etc/crontabs/root"
	/etc/init.d/cron restart

	uci del "dhcp.@dnsmasq[0].nonwildcard" 2>"/dev/null"
	uci rename "dhcp.@dnsmasq[0]._orig_nonwildcard"="nonwildcard" 2>"/dev/null"
	uci commit "dhcp"

	if [ -z "$FW4" ]; then
		iptables -D FORWARD -o "$TUNNAME" -j ACCEPT 2>"/dev/null"
		[ -z "$(command -v ip6tables)" ] || ip6tables -D FORWARD -o "$TUNNAME" -j ACCEPT 2>"/dev/null"
		rm -f "/var/etc/$CONF.include"
	fi

	rm -f "$RUN_DIR/sing-box.json" "$RUN_DIR/sing-box.log"

	log "Service stopped."
}

reload_service() {
	log "Reloading service..."

	stop
	start
}

service_triggers() {
	procd_add_reload_trigger "$CONF"
}
